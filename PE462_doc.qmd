---
title: "PE462 Repot"
author: "E. Zeghal"
date: "`r Sys.Date()`"
format: 
  html:
    html-math-method: katex
    toc: true
    toc-location: left
    toc-float: true
    toc-depth: 5
    code-fold: show
theme:
  light: flatly
  dark: darkly
execute:
  warning: false
editor: visual
bibliography: references.bib
---

### Study context: {#sec-study-context}

Our goal is the exploration of Illumina sequencing data (primers 515F-926R) . The amplified DNA was extracted from the surface of plastic films (polymers: PE, PET, PS and Nylon) incubated in 5L bottles of seawater collected from 2 different station (offshore vs coastal) in the North Sea.\
The files used here are the resulting asv tables and taxonomy tables obtained via [CASCABEL](https://github.com/AlejandroAb/CASCABEL) (v4.6.2) [@abdalaasbun2020]. Raw sequencing data, original asv table and taxonomy table are accessible via \*\*\*\*\*\*\*\*.

The following sections describe the different steps and codes used during the analysis.

### 1. Data import and cleaning {#sec-1.-data-import-and-cleaning}

#### Import data for phyloseq

let's load the libraries needed for this section

```{r}
#| label: load packages
#| results: hide
#| warning: false	
library("magrittr")
library("tidyverse")
library("phyloseq")
library("mia")
library("Hmisc")
```

```{r}
#| label: import raw data
#| results: hide

tax1 <- read.delim("../both_lanes/asv/taxonomy_dada2/representative_seq_set_tax_assignments.txt",row.names = 1, na.strings = "NA")
tax2 <- read.delim("../unpaired_PR2/asv/taxonomy_dada2/representative_seq_set_tax_assignments.txt",row.names = 1, na.strings = "NA")
otu1 <- as.matrix(read.delim("../both_lanes/asv/asv_table.txt", row.names = 1))
otu2 <- read.delim("../unpaired_PR2/asv/asv_table.txt", row.names = 1)
map <- sample_data(read.csv("../mapfile_PE462_corrected_final.csv", row.names = 1, na.strings = c("NA", "")))
```

Now that our raw data is imported, we need to combine the Eukaryotas and Prokaryotes taxonomy tables to import as a phyloseq `tax_table()` object. this demands a few tweaks and re-formatting.

```{r}
#| label: combined phyloseq tax table
#| results: hide

# correct the ASV IDs sequentially 
rownames(tax2) <- paste0("asv.",(length(rownames(tax1))+1):(length(rownames(tax1))+length(rownames(tax2))))

# correct ranks in prokaryotes tax table
ranks <- c ("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
colnames(tax1) <-  ranks

# for ease of handling we'll change the rank Division to Phylum for the Eukaryotes table
colnames(tax2)[3] <- "Phylum"

tax2 <- tax2 %>% 
  mutate( across(.cols = everything(), ~str_replace_all(.,c("XXX"="","XX"="","_X"= "", "_" = " "))))
# and add a Supergroup column to the prokaryotes column by duplicating the kingdom column content
tax1 <- tax1 %>% mutate(Supergroup = Kingdom, .after = Kingdom)

tax2 <- as.matrix(tax2)
tax1 <- as.matrix(tax1)

# combine into phyloseq tax_table()
tax <- rbind(tax1,tax2) %>%
  mutate(across(.cols = everything(), ~str_squish(.))) %>%
  as.matrix() %>% 
  tax_table()
```

Now, same thing for the Eukaryotas and Prokaryotes asv tables that will be imported as a phyloseq `otu_table()` object.

```{r}
#| label: combined phyloseq otu table
#| results: hide

# Rename ASV IDs
rownames(otu2) <- rownames(tax2)

# Samples "NIOZ186.245.238","NIOZ322.013.254","NIOZ322.203.188" and "NIOZ322.251.236" are missing in the euk asv table
samples_missing <- setdiff(colnames(otu1),colnames(otu2))

# add columns with zeros as asv count for the missing samples
for (i in 1:length(samples_missing)) {otu2[samples_missing[i]] <- 0 }

otu2 <- as.matrix (otu2)

# combine into phyloseq otu_table()
otu <- rbind(otu1,otu2) %>%  otu_table(taxa_are_rows = TRUE)
```

```{r}
#| label: combined phyloseq object

physeq_object <-  merge_phyloseq(otu, tax, map) 
physeq_object
```

#### Data cleaning and alpha diversity

The obtained data set still needs a bit of cleaning i.e. deleting singletons, deleting chloroplasts, eliminating poorly assigned ASVs, harmonize taxonomy, etc.

```{r}
#| label: cleaning_1
#| results: hide

# Delete poorly assigned ASVs
get_taxa_unique(physeq_object, "Kingdom") 
physeq_object <- subset_taxa(physeq_object, !is.na(Kingdom) & Kingdom %in% c("Bacteria", "Archaea", "Eukaryota"))

# Unify all forms of 'unassigned'
only_unassigned <- function(x) {
  if_else(x %in% c("uncultured","Uncultured","metagenome","Metagenome","unknown","Unknown","NA"),"unassigned", x)
  }

taxo <- as.data.frame(physeq_object@tax_table)%>% 
  replace(is.na(.),"unassigned") %>% 
  mutate( across(.cols = everything(), ~only_unassigned(.)))

taxo <- tax_table(as.matrix(taxo))

physeq_object <- merge_phyloseq(physeq_object@otu_table, taxo, map)

# Delete chloroplast and Mitochodria
any((get_taxa_unique(physeq_object, "Order") == "Chloroplast"))
any((get_taxa_unique(physeq_object, "Family") == "Mitochondria"))
physeq_object <- physeq_object %>% 
  subset_taxa(!Order%in% c("Chloroplast")) %>%
  subset_taxa(!Family%in% c("Mitochondria"))
```

Before continuing with the pre-processing, let's calculate the ùù∞ diversity indexes. Some of these are sensitive to the presence of singletons.

```{r}
#| label: alpha diversity indexes

a_div <- phyloseq::estimate_richness(physeq_object)
print(a_div)
```

Now we can proceed with the rest of the pre-processing.

```{r}
#| label: cleaning_2

# keep asv with abundance higher than 2 in at least 3 samples
# Filter out timepoint 15 (incomplete)
# Filter out 92 asv with "unassigned" as phylum

physeq <- physeq_object %>% 
  filter_taxa( function(x) sum(x > 2) >= 3, TRUE) %>% 
  subset_samples(timepoint_days %nin% c("15")) %>% 
  subset_taxa(!Phylum == "unassigned")

physeq
```

Now that the overall data set is "clean", we will produce a tidy table.

```{r}
#| label: Tidy physeq

source("./tidy_psmelt.R")
tidy_physeq_asv <- tidy_psmelt(physeq)

tidy_physeq_asv$Species <- if_else(
    (!tidy_physeq_asv$Genus=="unassigned"&!tidy_physeq_asv$Species=="unassigned"),
    str_c(tidy_physeq_asv$Genus," ",tidy_physeq_asv$Species),
    str_c(tidy_physeq_asv$Genus," sp."))

  tidy_physeq_asv$detail <-if_else(
  tidy_physeq_asv$material=="wood", 
  str_c(tidy_physeq_asv$material,"_",tidy_physeq_asv$station,"_",tidy_physeq_asv$timepoint_days), 
tidy_physeq_asv$detail)

tidy_physeq_asv$polymer <- if_else(tidy_physeq_asv$material=="wood", 
                                   str_c(tidy_physeq_asv$material), 
                                   tidy_physeq_asv$polymer)
tidy_physeq_asv$replicate <- NULL

```

```{r}
#| label: Relative abundances calculations

t3 <- tidy_physeq_asv  %>% group_by(Sample) %>% mutate(Sample_rel_abund = Abundance / sum(Abundance)) %>% #relative abundance of each otu per sample
  ungroup() %>%
  group_by(detail) %>% mutate( rep_rel_abund = Sample_rel_abund / sum(Sample_rel_abund)) %>% #relative abundance of each otu per number of samples in replicates
  ungroup() %>% 
  #Kingdom_section
  group_by(Sample, Kingdom) %>% 
  mutate(Kingdom_rel_abund_Sample = sum(Sample_rel_abund)) %>%  #Kingdom relative abundance per sample 
  ungroup() %>% 
  group_by(detail, Kingdom) %>% 
  mutate(Kingdom_st_dev_abund_samples = sd(Kingdom_rel_abund_Sample)) %>% # standard dev of Kingdom relative abundances between replicates of detail (ployner_timepoint_days_treatment)
  mutate(Kingdom_rep_rel_abund = sum(rep_rel_abund)) %>% #Kingdom relative abundance per samples of desc 
  ungroup() %>%
  #Phylum_section
  group_by(Sample, Phylum) %>% 
  mutate(Phylum_rel_abund_Sample = sum(Sample_rel_abund)) %>%
  ungroup() %>% 
  group_by(detail, Phylum) %>% 
  mutate(st_dev_Phylum_abund = sd(Phylum_rel_abund_Sample)) %>%
  mutate(Phyla_rep_rel_abund = sum(rep_rel_abund)) %>%
  ungroup() %>% 
  #Class_section
  group_by(Sample, Class) %>% 
  mutate(Class_rel_abund_Sample = sum(Sample_rel_abund)) %>%
  ungroup() %>% 
  group_by(detail, Class) %>% 
  mutate(st_dev_Class_abund = sd(Class_rel_abund_Sample)) %>%
  mutate(Class_rep_rel_abund = sum(rep_rel_abund)) %>%
  ungroup() %>% 
  #Order_section
  group_by(Sample, Order) %>% 
  mutate(Order_rel_abund_Sample = sum(Sample_rel_abund)) %>%
  ungroup() %>% 
  group_by(detail, Order) %>% 
  mutate(st_dev_Order_abund = sd(Order_rel_abund_Sample)) %>%
  mutate(Order_rep_rel_abund = sum(rep_rel_abund)) %>%
  ungroup() %>% 
  #Family_section
  group_by(Sample, Family) %>% 
  mutate(Family_rel_abund_Sample = sum(Sample_rel_abund)) %>%
  ungroup() %>% 
  group_by(detail, Family) %>% 
  mutate(st_dev_Family_abund = sd(Family_rel_abund_Sample)) %>%
  mutate(Family_rep_rel_abund = sum(rep_rel_abund)) %>%
  ungroup() %>% 
  #Genus_section
  group_by(Sample, Genus) %>% 
  mutate(Genus_rel_abund_Sample = sum(Sample_rel_abund)) %>%
  ungroup() %>% 
  group_by(detail, Genus) %>% 
  mutate(st_dev_Genus_abund = sd(Genus_rel_abund_Sample)) %>%
  mutate(Genus_rep_rel_abund = sum(rep_rel_abund)) %>%
  ungroup() %>% 
  #Species_section
  group_by(Sample, Species) %>% 
  mutate(Species_rel_abund_Sample = sum(Sample_rel_abund)) %>%
  ungroup() %>% 
  group_by(detail, Species) %>% 
  mutate(st_dev_Species_abund = sd(Species_rel_abund_Sample)) %>%
  mutate(Species_rep_rel_abund = sum(rep_rel_abund)) %>%
  ungroup()  

# write_csv(t3, "../tidyPE462_rel_abund_calc.csv")

```
